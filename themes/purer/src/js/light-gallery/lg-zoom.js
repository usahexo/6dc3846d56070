/** !
 * lg-zoom.js | 1.0.1 | December 22nd 2016
 * http://sachinchoolur.github.io/lg-zoom.js
 * Copyright (c) 2016 Sachin N;
 * @license GPLv3
 */
!(function (e) { if (typeof exports === 'object' && typeof module !== 'undefined')module.exports = e(); else if (typeof define === 'function' && define.amd)define([], e); else { let t; t = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this, t.LgZoom = e(); } }(() => {
  let e; let t; let o; return (function e(t, o, r) { function l(s, a) { if (!o[s]) { if (!t[s]) { const n = typeof require === 'function' && require; if (!a && n) return n(s, !0); if (i) return i(s, !0); const u = new Error(`Cannot find module '${s}'`); throw u.code = 'MODULE_NOT_FOUND', u; } const c = o[s] = { exports: {} }; t[s][0].call(c.exports, (e) => { const o = t[s][1][e]; return l(o || e); }, c, c.exports, e, t, o, r); } return o[s].exports; } for (var i = typeof require === 'function' && require, s = 0; s < r.length; s++)l(r[s]); return l; }({
    1: [function (t, o, r) {
      !(function (t, o) { if (typeof e === 'function' && e.amd)e([], o); else if (typeof r !== 'undefined')o(); else { const l = { exports: {} }; o(), t.lgZoom = l.exports; } }(this, () => {
        const e = Object.assign || function (e) { for (let t = 1; t < arguments.length; t++) { const o = arguments[t]; for (const r in o)Object.prototype.hasOwnProperty.call(o, r) && (e[r] = o[r]); } return e; }; const t = function e() { let t = !1; const o = navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./); return o && parseInt(o[2], 10) < 54 && (t = !0), t; }; const o = {
          scale: 1, zoom: !0, actualSize: !0, enableZoomAfter: 300, useLeftForZoom: t(),
        }; const r = function t(r) { return this.el = r, this.core = window.lgData[this.el.getAttribute('lg-uid')], this.core.s = { ...o, ...this.core.s }, this.core.s.zoom && this.core.doCss() && (this.init(), this.zoomabletimeout = !1, this.pageX = window.innerWidth / 2, this.pageY = window.innerHeight / 2 + (document.documentElement.scrollTop || document.body.scrollTop)), this; }; r.prototype.init = function () { const e = this; let t = '<span id="lg-zoom-in" class="lg-icon"></span><span id="lg-zoom-out" class="lg-icon"></span>'; e.core.s.actualSize && (t += '<span id="lg-actual-size" class="lg-icon"></span>'), e.core.s.useLeftForZoom ? utils.addClass(e.core.outer, 'lg-use-left-for-zoom') : utils.addClass(e.core.outer, 'lg-use-transition-for-zoom'), this.core.outer.querySelector('.lg-toolbar').insertAdjacentHTML('beforeend', t), utils.on(e.core.el, 'onSlideItemLoad.lgtmzoom', (t) => { let o = e.core.s.enableZoomAfter + t.detail.delay; utils.hasClass(document.body, 'lg-from-hash') && t.detail.delay ? o = 0 : utils.removeClass(document.body, 'lg-from-hash'), e.zoomabletimeout = setTimeout(() => { utils.addClass(e.core.___slide[t.detail.index], 'lg-zoomable'); }, o + 30); }); let o = 1; const r = function t(o) { const r = e.core.outer.querySelector('.lg-current .lg-image'); let l; let i; const s = (window.innerWidth - r.clientWidth) / 2; const a = (window.innerHeight - r.clientHeight) / 2 + (document.documentElement.scrollTop || document.body.scrollTop); l = e.pageX - s, i = e.pageY - a; const n = (o - 1) * l; const u = (o - 1) * i; utils.setVendor(r, 'Transform', `scale3d(${o }, ${o }, 1)`), r.setAttribute('data-scale', o), e.core.s.useLeftForZoom ? (r.parentElement.style.left = `${-n}px`, r.parentElement.style.top = `${-u}px`) : utils.setVendor(r.parentElement, 'Transform', `translate3d(-${n }px, -${u }px, 0)`), r.parentElement.setAttribute('data-x', n), r.parentElement.setAttribute('data-y', u); }; const l = function t() { o > 1 ? utils.addClass(e.core.outer, 'lg-zoomed') : e.resetZoom(), o < 1 && (o = 1), r(o); }; const i = function t(r, i, s, a) { const n = i.clientWidth; let u; u = e.core.s.dynamic ? e.core.s.dynamicEl[s].width || i.naturalWidth || n : e.core.items[s].getAttribute('data-width') || i.naturalWidth || n; let c; utils.hasClass(e.core.outer, 'lg-zoomed') ? o = 1 : u > n && (c = u / n, o = c || 2), a ? (e.pageX = window.innerWidth / 2, e.pageY = window.innerHeight / 2 + (document.documentElement.scrollTop || document.body.scrollTop)) : (e.pageX = r.pageX || r.targetTouches[0].pageX, e.pageY = r.pageY || r.targetTouches[0].pageY), l(), setTimeout(() => { utils.removeClass(e.core.outer, 'lg-grabbing'), utils.addClass(e.core.outer, 'lg-grab'); }, 10); }; let s = !1; utils.on(e.core.el, 'onAferAppendSlide.lgtmzoom', (t) => { const o = t.detail.index; const r = e.core.___slide[o].querySelector('.lg-image'); e.core.isTouch || utils.on(r, 'dblclick', (e) => { i(e, r, o); }), e.core.isTouch && utils.on(r, 'touchstart', (e) => { s ? (clearTimeout(s), s = null, i(e, r, o)) : s = setTimeout(() => { s = null; }, 300), e.preventDefault(); }); }), utils.on(window, 'resize.lgzoom scroll.lgzoom orientationchange.lgzoom', () => { e.pageX = window.innerWidth / 2, e.pageY = window.innerHeight / 2 + (document.documentElement.scrollTop || document.body.scrollTop), r(o); }), utils.on(document.getElementById('lg-zoom-out'), 'click.lg', () => { e.core.outer.querySelector('.lg-current .lg-image') && (o -= e.core.s.scale, l()); }), utils.on(document.getElementById('lg-zoom-in'), 'click.lg', () => { e.core.outer.querySelector('.lg-current .lg-image') && (o += e.core.s.scale, l()); }), utils.on(document.getElementById('lg-actual-size'), 'click.lg', (t) => { i(t, e.core.___slide[e.core.index].querySelector('.lg-image'), e.core.index, !0); }), utils.on(e.core.el, 'onBeforeSlide.lgtm', () => { o = 1, e.resetZoom(); }), e.core.isTouch || e.zoomDrag(), e.core.isTouch && e.zoomSwipe(); }, r.prototype.resetZoom = function () { utils.removeClass(this.core.outer, 'lg-zoomed'); for (let e = 0; e < this.core.___slide.length; e++) this.core.___slide[e].querySelector('.lg-img-wrap') && (this.core.___slide[e].querySelector('.lg-img-wrap').removeAttribute('style'), this.core.___slide[e].querySelector('.lg-img-wrap').removeAttribute('data-x'), this.core.___slide[e].querySelector('.lg-img-wrap').removeAttribute('data-y')); for (let t = 0; t < this.core.___slide.length; t++) this.core.___slide[t].querySelector('.lg-image') && (this.core.___slide[t].querySelector('.lg-image').removeAttribute('style'), this.core.___slide[t].querySelector('.lg-image').removeAttribute('data-scale')); this.pageX = window.innerWidth / 2, this.pageY = window.innerHeight / 2 + (document.documentElement.scrollTop || document.body.scrollTop); }, r.prototype.zoomSwipe = function () { for (var e = this, t = {}, o = {}, r = !1, l = !1, i = !1, s = 0; s < e.core.___slide.length; s++)utils.on(e.core.___slide[s], 'touchstart.lg', (o) => { if (utils.hasClass(e.core.outer, 'lg-zoomed')) { const r = e.core.___slide[e.core.index].querySelector('.lg-object'); i = r.offsetHeight * r.getAttribute('data-scale') > e.core.outer.querySelector('.lg').clientHeight, l = r.offsetWidth * r.getAttribute('data-scale') > e.core.outer.querySelector('.lg').clientWidth, (l || i) && (o.preventDefault(), t = { x: o.targetTouches[0].pageX, y: o.targetTouches[0].pageY }); } }); for (let a = 0; a < e.core.___slide.length; a++)utils.on(e.core.___slide[a], 'touchmove.lg', (s) => { if (utils.hasClass(e.core.outer, 'lg-zoomed')) { const a = e.core.___slide[e.core.index].querySelector('.lg-img-wrap'); let n; let u; s.preventDefault(), r = !0, o = { x: s.targetTouches[0].pageX, y: s.targetTouches[0].pageY }, utils.addClass(e.core.outer, 'lg-zoom-dragging'), u = i ? -Math.abs(a.getAttribute('data-y')) + (o.y - t.y) : -Math.abs(a.getAttribute('data-y')), n = l ? -Math.abs(a.getAttribute('data-x')) + (o.x - t.x) : -Math.abs(a.getAttribute('data-x')), (Math.abs(o.x - t.x) > 15 || Math.abs(o.y - t.y) > 15) && (e.core.s.useLeftForZoom ? (a.style.left = `${n}px`, a.style.top = `${u}px`) : utils.setVendor(a, 'Transform', `translate3d(${n }px, ${u }px, 0)`)); } }); for (let n = 0; n < e.core.___slide.length; n++)utils.on(e.core.___slide[n], 'touchend.lg', () => { utils.hasClass(e.core.outer, 'lg-zoomed') && r && (r = !1, utils.removeClass(e.core.outer, 'lg-zoom-dragging'), e.touchendZoom(t, o, l, i)); }); }, r.prototype.zoomDrag = function () { for (var e = this, t = {}, o = {}, r = !1, l = !1, i = !1, s = !1, a = 0; a < e.core.___slide.length; a++)utils.on(e.core.___slide[a], 'mousedown.lgzoom', (o) => { const l = e.core.___slide[e.core.index].querySelector('.lg-object'); s = l.offsetHeight * l.getAttribute('data-scale') > e.core.outer.querySelector('.lg').clientHeight, i = l.offsetWidth * l.getAttribute('data-scale') > e.core.outer.querySelector('.lg').clientWidth, utils.hasClass(e.core.outer, 'lg-zoomed') && utils.hasClass(o.target, 'lg-object') && (i || s) && (o.preventDefault(), t = { x: o.pageX, y: o.pageY }, r = !0, e.core.outer.scrollLeft += 1, e.core.outer.scrollLeft -= 1, utils.removeClass(e.core.outer, 'lg-grab'), utils.addClass(e.core.outer, 'lg-grabbing')); }); utils.on(window, 'mousemove.lgzoom', (a) => { if (r) { const n = e.core.___slide[e.core.index].querySelector('.lg-img-wrap'); let u; let c; l = !0, o = { x: a.pageX, y: a.pageY }, utils.addClass(e.core.outer, 'lg-zoom-dragging'), c = s ? -Math.abs(n.getAttribute('data-y')) + (o.y - t.y) : -Math.abs(n.getAttribute('data-y')), u = i ? -Math.abs(n.getAttribute('data-x')) + (o.x - t.x) : -Math.abs(n.getAttribute('data-x')), e.core.s.useLeftForZoom ? (n.style.left = `${u}px`, n.style.top = `${c}px`) : utils.setVendor(n, 'Transform', `translate3d(${u }px, ${c }px, 0)`); } }), utils.on(window, 'mouseup.lgzoom', (a) => { r && (r = !1, utils.removeClass(e.core.outer, 'lg-zoom-dragging'), !l || t.x === o.x && t.y === o.y || (o = { x: a.pageX, y: a.pageY }, e.touchendZoom(t, o, i, s)), l = !1), utils.removeClass(e.core.outer, 'lg-grabbing'), utils.addClass(e.core.outer, 'lg-grab'); }); }, r.prototype.touchendZoom = function (e, t, o, r) { const l = this; const i = l.core.___slide[l.core.index].querySelector('.lg-img-wrap'); const s = l.core.___slide[l.core.index].querySelector('.lg-object'); let a = -Math.abs(i.getAttribute('data-x')) + (t.x - e.x); let n = -Math.abs(i.getAttribute('data-y')) + (t.y - e.y); const u = (l.core.outer.querySelector('.lg').clientHeight - s.offsetHeight) / 2; const c = Math.abs(s.offsetHeight * Math.abs(s.getAttribute('data-scale')) - l.core.outer.querySelector('.lg').clientHeight + u); const d = (l.core.outer.querySelector('.lg').clientWidth - s.offsetWidth) / 2; const g = Math.abs(s.offsetWidth * Math.abs(s.getAttribute('data-scale')) - l.core.outer.querySelector('.lg').clientWidth + d); (Math.abs(t.x - e.x) > 15 || Math.abs(t.y - e.y) > 15) && (r && (n <= -c ? n = -c : n >= -u && (n = -u)), o && (a <= -g ? a = -g : a >= -d && (a = -d)), r ? i.setAttribute('data-y', Math.abs(n)) : n = -Math.abs(i.getAttribute('data-y')), o ? i.setAttribute('data-x', Math.abs(a)) : a = -Math.abs(i.getAttribute('data-x')), l.core.s.useLeftForZoom ? (i.style.left = `${a}px`, i.style.top = `${n}px`) : utils.setVendor(i, 'Transform', `translate3d(${a}px, ${n}px, 0)`)); }, r.prototype.destroy = function () { const e = this; utils.off(e.core.el, '.lgzoom'), utils.off(window, '.lgzoom'); for (let t = 0; t < e.core.___slide.length; t++)utils.off(e.core.___slide[t], '.lgzoom'); utils.off(e.core.el, '.lgtmzoom'), e.resetZoom(), clearTimeout(e.zoomabletimeout), e.zoomabletimeout = !1; }, window.lgModules.zoom = r;
      }));
    }, {}],
  }, {}, [1]))(1);
}));
